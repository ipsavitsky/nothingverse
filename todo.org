* TODO Make replies to posts
** TODO Make them update correctly
So I doubt that I'll need to do the complicated polling mechanism I have for posts - too many connections to uphold. I would rather have reply be inserted by htmx upon generating and then pull *ALL* replies when reloading the page.
** KILL Bundling (Do I even need it? How do I pair it with nix?)
* TODO Nix
** TODO Nix service definition
* TODO Write a readme
* IDEA Decide if we need a custom generation sse handler
Currently, the server grows the string out of generation tokens, but what if we only send the tokens and grow the string on the frontend and backend.
* HOLD Known issues
** HOLD XSS attack is possible
The frontend should not be the source of truth for the post content. Ideally, the frontend post and reply buttons should only send the post number (a generation UUID, perhaps?), so that I can't just submit anything on the ~/submit_*~ endpoint.
On the second thought, ~/generate_*~ endpoints should write to the generation table, and posts and replies should join on generation id. No UUID requred and no frontend state.
I have implemented the generations table - but is it safe? I can still reply with any post in that table. I guess that's better at least
